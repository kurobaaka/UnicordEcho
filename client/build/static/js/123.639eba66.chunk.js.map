{"version":3,"file":"static/js/123.639eba66.chunk.js","mappings":"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","sources":["components/profile/TrustedDevicesLocations.jsx","components/profile/PrimaryDevicesLocations.jsx","components/profile/BlockedDevicesLocations.jsx","pages/DevicesLocations.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getTrustedContextAuthDataAction,\n  deleteContextAuthDataAction,\n  getBlockedAuthContextDataAction,\n  blockContextAuthDataAction,\n} from \"../../redux/actions/authActions\";\nimport LoadingSpinner from \"../loader/ButtonLoadingSpinner\";\n\nconst TrustedDevicesLocations = ({ trustedAuthContextData }) => {\n  const [deleteLoading, setDeleteLoading] = useState({});\n  const [blockLoading, setBlockLoading] = useState({});\n  const dispatch = useDispatch();\n\n  const handleDelete = async (contextId) => {\n    setDeleteLoading((prevState) => ({\n      ...prevState,\n      [contextId]: true,\n    }));\n\n    await dispatch(deleteContextAuthDataAction(contextId));\n    await dispatch(getTrustedContextAuthDataAction());\n\n    setDeleteLoading((prevState) => ({\n      ...prevState,\n      [contextId]: false,\n    }));\n  };\n\n  const handleBlock = async (contextId) => {\n    setBlockLoading((prevState) => ({\n      ...prevState,\n      [contextId]: true,\n    }));\n\n    await dispatch(blockContextAuthDataAction(contextId));\n    await dispatch(getTrustedContextAuthDataAction());\n    await dispatch(getBlockedAuthContextDataAction());\n\n    setBlockLoading((prevState) => ({\n      ...prevState,\n      [contextId]: false,\n    }));\n  };\n\n  const trustedDevices = trustedAuthContextData?.map((device) => ({\n    _id: device._id,\n    device: device.device,\n    deviceType: device.deviceType,\n    ipAddress: device.ip,\n    location: `${device.city}, ${device.country}`,\n    browser: device.browser,\n    operatingSystem: device.os,\n    time: device.time,\n  }));\n\n  return (\n    <div className=\"max-w-3xl mx-auto mt-12 p-5\">\n      <h2 className=\"text-lg font-medium text-gray-900\">\n        Trusted Devices and Locations\n      </h2>\n      <div className=\"mt-6 border-t border-gray-200 pt-6\">\n        <div className=\"flow-root\">\n          <ul className=\"-my-5 divide-y divide-gray-200\">\n            {trustedDevices.length === 0 && (\n              <span className=\"text-sm font-medium text-gray-900\">\n                Not available\n              </span>\n            )}\n\n            {trustedDevices.map((device) => (\n              <li key={device._id} className=\"py-5\">\n                <div className=\"flex items-center justify-between space-x-4\">\n                  <div className=\"min-w-0 flex-1\">\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-900\">\n                        {device.device} {device.deviceType} - {device.time}\n                      </span>\n\n                      <span className=\"ml-1 text-sm text-gray-500\">\n                        ({device.ipAddress})\n                      </span>\n                    </div>\n                    <div className=\"mt-1 flex items-center space-x-4\">\n                      <span className=\"text-sm text-gray-500\">\n                        {device.location}\n                      </span>\n                      <span className=\"text-sm text-gray-500\">•</span>\n                      <span className=\"text-sm text-gray-500\">\n                        {device.browser} on {device.operatingSystem}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"flex-shrink-0\">\n                    <button\n                      disabled={deleteLoading[device._id]}\n                      onClick={() => handleDelete(device._id)}\n                      type=\"button\"\n                      className=\"mx-3 inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n                    >\n                      {deleteLoading[device._id] ? (\n                        <LoadingSpinner loadingText={\"Removing...\"} />\n                      ) : (\n                        <span>Remove</span>\n                      )}\n                    </button>\n                    <button\n                      disabled={blockLoading[device._id]}\n                      onClick={() => handleBlock(device._id)}\n                      type=\"button\"\n                      className=\"inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white bg-gray-400 hover:bg-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300\"\n                    >\n                      {blockLoading[device._id] ? (\n                        <LoadingSpinner loadingText={\"Blocking...\"} />\n                      ) : (\n                        <span>Block</span>\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TrustedDevicesLocations;\n","const PrimaryDevicesLocations = ({ contextAuthData }) => {\n  const primaryDevice = {\n    \"First Added\": contextAuthData?.firstAdded,\n    \"IP Address\": contextAuthData?.ip,\n    Country: contextAuthData?.country,\n    City: contextAuthData?.city,\n    Browser: contextAuthData?.browser,\n    Platform: contextAuthData?.platform,\n    OS: contextAuthData?.os,\n    Device: contextAuthData?.device,\n    \"Device Type\": contextAuthData?.deviceType,\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n      <div className=\"max-w-3xl mx-auto\">\n        <h2 className=\"text-lg font-medium text-gray-900\">\n          Primary Devices and Locations\n        </h2>\n\n        <div className=\"mt-6 border-t border-gray-200 pt-6\">\n          <dl className=\"grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2\">\n            {Object.entries(primaryDevice).map(([key, value]) => (\n              <div key={key} className=\"sm:col-span-1\">\n                <dt className=\"text-sm font-medium text-gray-500\">{key}</dt>\n                <dd className=\"mt-1 text-sm text-gray-900\">{value}</dd>\n              </div>\n            ))}\n          </dl>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PrimaryDevicesLocations;\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getTrustedContextAuthDataAction,\n  getBlockedAuthContextDataAction,\n  unblockContextAuthDataAction,\n} from \"../../redux/actions/authActions\";\nimport LoadingSpinner from \"../loader/ButtonLoadingSpinner\";\n\nconst BlockedDevicesLocations = ({ blockedContextAuthData }) => {\n  const [loading, setLoading] = useState({});\n  const dispatch = useDispatch();\n\n  const handleUnblock = async (contextId) => {\n    setLoading((prevState) => ({\n      ...prevState,\n      [contextId]: true,\n    }));\n\n    await dispatch(unblockContextAuthDataAction(contextId));\n    await dispatch(getBlockedAuthContextDataAction());\n    await dispatch(getTrustedContextAuthDataAction());\n\n    setLoading((prevState) => ({\n      ...prevState,\n      [contextId]: false,\n    }));\n  };\n\n  const blockedDevices = blockedContextAuthData?.map((device) => ({\n    _id: device._id,\n    device: device.device,\n    deviceType: device.deviceType,\n    ipAddress: device.ip,\n    location: `${device.city}, ${device.country}`,\n    browser: device.browser,\n    operatingSystem: device.os,\n    time: device.time,\n  }));\n\n  return (\n    <div className=\"max-w-3xl mx-auto mt-12 p-5\">\n      <h2 className=\"text-lg font-medium text-gray-900\">\n        Blocked Devices and Locations\n      </h2>\n      <div className=\"mt-6 border-t border-gray-200 pt-6\">\n        <div className=\"flow-root\">\n          <ul className=\"-my-5 divide-y divide-gray-200\">\n            {blockedDevices.length === 0 && (\n              <span className=\"text-sm font-medium text-gray-900\">\n                Not available\n              </span>\n            )}\n            {blockedDevices.map((device) => (\n              <li key={device._id} className=\"py-5\">\n                <div className=\"flex items-center justify-between space-x-4\">\n                  <div className=\"min-w-0 flex-1\">\n                    <div>\n                      <span className=\"text-sm font-medium text-gray-900\">\n                        {device.device} {device.deviceType} - {device.time}\n                      </span>\n\n                      <span className=\"ml-1 text-sm text-gray-500\">\n                        ({device.ipAddress})\n                      </span>\n                    </div>\n                    <div className=\"mt-1 flex items-center space-x-4\">\n                      <span className=\"text-sm text-gray-500\">\n                        {device.location}\n                      </span>\n                      <span className=\"text-sm text-gray-500\">•</span>\n                      <span className=\"text-sm text-gray-500\">\n                        {device.browser} on {device.operatingSystem}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"flex-shrink-0\">\n                    <button\n                      disabled={loading[device._id]}\n                      onClick={() => handleUnblock(device._id)}\n                      type=\"button\"\n                      className={`inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded shadow-sm text-white ${\n                        loading[device._id]\n                          ? \"bg-gray-400 cursor-not-allowed\"\n                          : \"bg-blue-500 hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\"\n                      }`}\n                    >\n                      {loading[device._id] ? (\n                        <LoadingSpinner loadingText={\"unblocking...\"} />\n                      ) : (\n                        \"Unblock\"\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlockedDevicesLocations;\n","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport TrustedDevicesLocations from \"../components/profile/TrustedDevicesLocations\";\nimport PrimaryDevicesLocations from \"../components/profile/PrimaryDevicesLocations\";\nimport BlockedDevicesLocations from \"../components/profile/BlockedDevicesLocations\";\nimport CommonLoading from \"../components/loader/CommonLoading\";\n\nimport {\n  getTrustedContextAuthDataAction,\n  getUserPreferencesAction,\n  getBlockedAuthContextDataAction,\n  getContextAuthDataAction,\n} from \"../redux/actions/authActions\";\n\nconst DevicesLocations = () => {\n  const dispatch = useDispatch();\n  const [dateFetched, setDateFetched] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await dispatch(getUserPreferencesAction());\n      await dispatch(getContextAuthDataAction());\n      await dispatch(getTrustedContextAuthDataAction());\n      await dispatch(getBlockedAuthContextDataAction());\n    };\n    fetchData().then(() => setDateFetched(true));\n  }, [dispatch, dateFetched]);\n\n  const userPreferences = useSelector((state) => state.auth?.userPreferences);\n  const contextAuthData = useSelector((state) => state.auth?.contextAuthData);\n  const trustedAuthContextData = useSelector(\n    (state) => state.auth?.trustedAuthContextData\n  );\n  const blockedContextAuthData = useSelector(\n    (state) => state.auth?.blockedAuthContextData\n  );\n\n  if (!dateFetched) {\n    return (\n      <div className=\"col-span-2 flex items-center justify-center h-screen\">\n        <CommonLoading />\n      </div>\n    );\n  }\n\n  if (!userPreferences || !contextAuthData) {\n    return (\n      <div className=\"bg-white border p-5 text-gray-700 text-center main-section\">\n        <p className=\"text-lg font-semibold mb-4\">\n          Context-based authentication is currently disabled for your account.\n        </p>\n        <p className=\"text-sm\">\n          By enabling context-based authentication, you will gain control over\n          your devices, their locations, and manage trusted and blocked devices.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"main-section border bg-white\">\n      <PrimaryDevicesLocations contextAuthData={contextAuthData} />\n\n      <TrustedDevicesLocations\n        trustedAuthContextData={trustedAuthContextData}\n      />\n      <BlockedDevicesLocations\n        blockedContextAuthData={blockedContextAuthData}\n      />\n    </div>\n  );\n};\n\nexport default DevicesLocations;\n"],"names":["_ref","trustedAuthContextData","_useState","useState","_useState2","_slicedToArray","deleteLoading","setDeleteLoading","_useState3","_useState4","blockLoading","setBlockLoading","dispatch","useDispatch","handleDelete","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","contextId","wrap","_context","prev","next","prevState","_objectSpread","_defineProperty","deleteContextAuthDataAction","getTrustedContextAuthDataAction","stop","_x","apply","arguments","handleBlock","_ref3","_callee2","_context2","blockContextAuthDataAction","getBlockedAuthContextDataAction","_x2","trustedDevices","map","device","_id","deviceType","ipAddress","ip","location","concat","city","country","browser","operatingSystem","os","time","_jsxs","className","children","_jsx","length","disabled","onClick","type","LoadingSpinner","loadingText","contextAuthData","primaryDevice","firstAdded","Country","City","Browser","Platform","platform","OS","Device","Object","entries","key","value","blockedContextAuthData","loading","setLoading","handleUnblock","unblockContextAuthDataAction","blockedDevices","dateFetched","setDateFetched","useEffect","fetchData","getUserPreferencesAction","getContextAuthDataAction","then","userPreferences","useSelector","state","_state$auth","auth","_state$auth2","_state$auth3","_state$auth4","blockedAuthContextData","PrimaryDevicesLocations","TrustedDevicesLocations","BlockedDevicesLocations","CommonLoading"],"sourceRoot":""}